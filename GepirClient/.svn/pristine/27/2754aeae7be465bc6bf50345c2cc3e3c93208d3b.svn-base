package org.gepir;

import java.net.MalformedURLException;
import java.net.URL;

import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;

/**
 * Gepir Router Version 3.1.087 12.06.13
 *
 * This class was generated by the JAX-WS RI. JAX-WS RI 2.2.4-b01 Generated
 * source version: 2.2
 *
 * http://www.gepir.de/router.asmx?WSDL or
 * http://www.gepir.de/v31/router.asmx?WSDL or
 * http://gepir.gs1.ch/v3/router.asmx
 */
@WebServiceClient(name = "router", targetNamespace = "http://www.gepir.org/", wsdlLocation = "http://www.gepir.de/router.asmx?WSDL")
public class Router extends Service
{

	private final static URL ROUTER_WSDL_LOCATION;
	private final static WebServiceException ROUTER_EXCEPTION;
	private final static QName ROUTER_QNAME = new QName("http://www.gepir.org/", "router");

	static
	{
		URL url = null;
		WebServiceException e = null;
		try
		{
			url = new URL("http://www.gepir.de/router.asmx?WSDL");
		}
		catch (final MalformedURLException ex)
		{
			e = new WebServiceException(ex);
		}
		ROUTER_WSDL_LOCATION = url;
		ROUTER_EXCEPTION = e;
	}

	public Router()
	{
		super(Router.__getWsdlLocation(), Router.ROUTER_QNAME);
	}

	public Router(final WebServiceFeature... features)
	{
		super(Router.__getWsdlLocation(), Router.ROUTER_QNAME, features);
	}

	public Router(final URL wsdlLocation)
	{
		super(wsdlLocation, Router.ROUTER_QNAME);
	}

	public Router(final URL wsdlLocation, final WebServiceFeature... features)
	{
		super(wsdlLocation, Router.ROUTER_QNAME, features);
	}

	public Router(final URL wsdlLocation, final QName serviceName)
	{
		super(wsdlLocation, serviceName);
	}

	public Router(final URL wsdlLocation, final QName serviceName, final WebServiceFeature... features)
	{
		super(wsdlLocation, serviceName, features);
	}

	/**
	 *
	 * @return returns RouterSoap
	 */
	@WebEndpoint(name = "routerSoap")
	public RouterSoap getRouterSoap()
	{
		return super.getPort(new QName("http://www.gepir.org/", "routerSoap"), RouterSoap.class);
	}

	/**
	 *
	 * @param features A list of {@link javax.xml.ws.WebServiceFeature} to
	 *            configure on the proxy. Supported features not in the
	 *            <code>features</code> parameter will have their default
	 *            values.
	 * @return returns RouterSoap
	 */
	@WebEndpoint(name = "routerSoap")
	public RouterSoap getRouterSoap(final WebServiceFeature... features)
	{
		return super.getPort(new QName("http://www.gepir.org/", "routerSoap"), RouterSoap.class, features);
	}

	/**
	 *
	 * @return returns RouterSoap
	 */
	@WebEndpoint(name = "routerSoap12")
	public RouterSoap getRouterSoap12()
	{
		return super.getPort(new QName("http://www.gepir.org/", "routerSoap12"), RouterSoap.class);
	}

	/**
	 *
	 * @param features A list of {@link javax.xml.ws.WebServiceFeature} to
	 *            configure on the proxy. Supported features not in the
	 *            <code>features</code> parameter will have their default
	 *            values.
	 * @return returns RouterSoap
	 */
	@WebEndpoint(name = "routerSoap12")
	public RouterSoap getRouterSoap12(final WebServiceFeature... features)
	{
		return super.getPort(new QName("http://www.gepir.org/", "routerSoap12"), RouterSoap.class, features);
	}

	/**
	 *
	 * @return returns RouterHttpGet
	 */
	@WebEndpoint(name = "routerHttpGet")
	public RouterHttpGet getRouterHttpGet()
	{
		return super.getPort(new QName("http://www.gepir.org/", "routerHttpGet"), RouterHttpGet.class);
	}

	/**
	 *
	 * @param features A list of {@link javax.xml.ws.WebServiceFeature} to
	 *            configure on the proxy. Supported features not in the
	 *            <code>features</code> parameter will have their default
	 *            values.
	 * @return returns RouterHttpGet
	 */
	@WebEndpoint(name = "routerHttpGet")
	public RouterHttpGet getRouterHttpGet(final WebServiceFeature... features)
	{
		return super.getPort(new QName("http://www.gepir.org/", "routerHttpGet"), RouterHttpGet.class, features);
	}

	/**
	 *
	 * @return returns RouterHttpPost
	 */
	@WebEndpoint(name = "routerHttpPost")
	public RouterHttpPost getRouterHttpPost()
	{
		return super.getPort(new QName("http://www.gepir.org/", "routerHttpPost"), RouterHttpPost.class);
	}

	/**
	 *
	 * @param features A list of {@link javax.xml.ws.WebServiceFeature} to
	 *            configure on the proxy. Supported features not in the
	 *            <code>features</code> parameter will have their default
	 *            values.
	 * @return returns RouterHttpPost
	 */
	@WebEndpoint(name = "routerHttpPost")
	public RouterHttpPost getRouterHttpPost(final WebServiceFeature... features)
	{
		return super.getPort(new QName("http://www.gepir.org/", "routerHttpPost"), RouterHttpPost.class, features);
	}

	private static URL __getWsdlLocation()
	{
		if (Router.ROUTER_EXCEPTION != null)
			throw Router.ROUTER_EXCEPTION;
		return Router.ROUTER_WSDL_LOCATION;
	}

}
